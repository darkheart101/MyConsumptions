/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package myconsumptions;

import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author darkheart
 */
public class AddEditMovieForm extends javax.swing.JFrame {
    Connection conn = null;    
    PreparedStatement pst = null;
    int editRecID = 0;
    /**
     * Creates new form AddMovieForm
     */
    public AddEditMovieForm() {
        initComponents();
        conn = db.java_db();
        Toolkit toolkit = getToolkit();
        Dimension size = toolkit.getScreenSize();     
        setLocation(500, size.height/2 - getHeight()/2);          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbl_MovieTitle = new javax.swing.JLabel();
        txt_movieTitle = new javax.swing.JTextField();
        cal_MovieDate = new com.toedter.calendar.JDateChooser();
        lbl_date = new javax.swing.JLabel();
        btn_saveMovie = new javax.swing.JButton();
        btn_cancelMovie = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lbl_MovieTitle.setText("Title");

        cal_MovieDate.setDateFormatString("yyyy-MM-dd");

        lbl_date.setText("Date");

        btn_saveMovie.setText("Save");
        btn_saveMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveMovieActionPerformed(evt);
            }
        });

        btn_cancelMovie.setText("Cancel");
        btn_cancelMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelMovieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_MovieTitle)
                                .addGap(18, 18, 18)
                                .addComponent(txt_movieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbl_date)
                                .addGap(18, 18, 18)
                                .addComponent(cal_MovieDate, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_cancelMovie)
                        .addGap(18, 18, 18)
                        .addComponent(btn_saveMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_MovieTitle)
                    .addComponent(txt_movieTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cal_MovieDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cancelMovie)
                    .addComponent(btn_saveMovie))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cancelMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelMovieActionPerformed
        // TODO add your handling code here:
        Movies mv = new Movies();
        mv.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_cancelMovieActionPerformed

    private void btn_saveMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveMovieActionPerformed
        // TODO add your handling code here:
        if(this.editRecID > 0){
            this.update_MovieRecord();
        }else{
            this.insert_new_MovieRecord();
        }
    }//GEN-LAST:event_btn_saveMovieActionPerformed
    
    // Insert new movie Record    
    public void insert_new_MovieRecord(){
        try {
            String sql ="insert into Movies " 
                        + "(MovieTitle, Date) "
                        + "values (?,?)";
            
            pst = conn.prepareStatement(sql);
            pst.setString(1,txt_movieTitle.getText());
            pst.setString(2,((JTextField)cal_MovieDate.getDateEditor().getUiComponent()).getText());
            
            pst.execute();
            JOptionPane.showMessageDialog(null,"Data is saved successfully");

       }
       catch (Exception e){
           JOptionPane.showMessageDialog(null,e);
       }
       finally {
            try{                
                pst.close();
                //clearAll();
                Movies mv = new Movies();
                mv.setVisible(true);
                this.dispose();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }            
        }         
    }
    // Delete Function
    public static void delete_MovieRecord(int RecID){
        if(RecID <=0){
            JOptionPane.showMessageDialog(null,"No Valid Record Selected");
        }
        int MovieID = RecID;
        
        Connection conn = db.java_db();
                
        try {
            String sql ="DELETE FROM Movies WHERE MovieID = ?";
            
            try (PreparedStatement pst = conn.prepareStatement(sql)) {
                pst.setString(1,Integer.toString(MovieID));
                pst.execute();
                JOptionPane.showMessageDialog(null,"Data deleted successfully");
            }

       }
       catch (SQLException | HeadlessException e){
          
           JOptionPane.showMessageDialog(null,e);
       }
       finally {
            try{                
               
                
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }            
        }
    }
    //update movie record
    public void update_MovieRecord(){
        if(this.editRecID <= 0){
            JOptionPane.showMessageDialog(null,"No Valid Record Selected");
        }
        int MovieID = this.editRecID;        
        
        try {
            String sql ="UPDATE Movies SET " 
                        + "MovieTitle = ?"
                        + ",Date = ? "                        
                        +"WHERE MovieID = ?";
            
            pst = conn.prepareStatement(sql);
            pst.setString(1,txt_movieTitle.getText());
            pst.setString(2,((JTextField)cal_MovieDate.getDateEditor().getUiComponent()).getText());
            pst.setString(3,Integer.toString(MovieID));
            
            pst.execute();
            JOptionPane.showMessageDialog(null,"Data is saved successfully");

       }
       catch (Exception e){
           
           JOptionPane.showMessageDialog(null,e);
       }
       finally {
            try{                
                pst.close();
                //clearAll();
                Movies mv = new Movies();
                mv.setVisible(true);
                this.dispose();
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }            
        }         
        
    }
    public void loadRecordToForm(Map data) throws ParseException{
        
        txt_movieTitle.setText( (String)data.get("MovieTitle") );
        String dateWatchedInString = (String)data.get("Date");
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        
        java.util.Date DateWatched = sdf.parse(dateWatchedInString);


        cal_MovieDate.setDate(DateWatched);
    }    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEditMovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEditMovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEditMovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEditMovieForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddEditMovieForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelMovie;
    private javax.swing.JButton btn_saveMovie;
    private com.toedter.calendar.JDateChooser cal_MovieDate;
    private javax.swing.JLabel lbl_MovieTitle;
    private javax.swing.JLabel lbl_date;
    private javax.swing.JTextField txt_movieTitle;
    // End of variables declaration//GEN-END:variables
}
